import streamlit as st
from langchain.document_loaders import WebBaseLoader
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain.vectorstores import Chroma
from langchain.embeddings import BedrockEmbeddings
from langchain.chains import RetrievalQA
from langchain_community.chat_models import BedrockChat
from langchain.prompts import PromptTemplate
import boto3
import os
from anthropic import AnthropicBedrock
from langchain_core.messages import HumanMessage

# Configure AWS Bedrock client
client = AnthropicBedrock(
    aws_access_key=os.getenv("access key"),
    aws_secret_key=os.getenv("secret key"),
    aws_region=os.getenv("us-east-1")
)

# AWS and Bedrock config
REGION = "us-east-1"
os.environ["AWS_DEFAULT_REGION"] = REGION

# Titan Embeddings via LangChain
embedding = BedrockEmbeddings(
    model_id="amazon.titan-embed-text-v2:0",
    client=boto3.client("bedrock-runtime", region_name=REGION)
)

# Claude 3.5 Sonnet via LangChain
llm = BedrockChat(
    model_id="anthropic.claude-3-sonnet-20240229-v1:0",
    model_kwargs={
        "temperature": 0.7,
        "anthropic_version": "bedrock-2023-05-31",
        "max_tokens": 1000,
    },
    client=boto3.client("bedrock-runtime", region_name=REGION),
)

# Prompt template for RFP generation
prompt_template = PromptTemplate(
    template="""
Objective : To create Request for Proposal (RFP) document
Human: You are a senior purchasing manager, you have been tasked to create RFP to solicit proposals from vendors
for products and services that your company intend to purchase. The RFP is a critical document that outlines 
companies requirements, expectations and evaluation criteria. 
The product/service the user is interested in is: {product}.
Generate an effective RFP by addressingthe following key points:

Introduction and Background: Provide brief introduction about your company, its mission and purpose of RFP
Scope : Clearly define the scope of work and specific products and service you require from company
Vendor qualifications: Specify the qualifications and experience you expect from vendors
Terms and conditions : Outline any specific terms, conditions and requirements that vendor must agree including
pricing, schedules, intellectual property
<context>
{context}
</context>

""",
     input_variables=["product", "context"],
)


# Streamlit UI
st.title("ðŸ“„ RFP Generator")

url = st.text_input("Enter website URL")
product = st.text_input("Product/Service for RFP")

if st.button("Generate RFP"):
    if not url or not product:
        st.warning("Please fill in both fields.")
    else:
        with st.spinner("Scraping website..."):
            loader = WebBaseLoader(url)
            docs = loader.load()

        with st.spinner("Chunking content..."):
            splitter = RecursiveCharacterTextSplitter(chunk_size=500, chunk_overlap=100)
            chunks = splitter.split_documents(docs)

        with st.spinner("Embedding and storing in vector DB..."):
            vectordb = Chroma.from_documents(
                documents=chunks,
                embedding=embedding,
                persist_directory="./chroma_langchain"
            )

        with st.spinner("Retrieving relevant chunks..."):
            retriever = vectordb.as_retriever(search_type="similarity", search_kwargs={"k": 5})
            relevant_docs = retriever.get_relevant_documents(product)
            # context = "\n\n".join(doc.page_content for doc in relevant_docs)
            context = relevant_docs

        with st.spinner("Generating RFP with Claude..."):
            prompt = prompt_template.format(product=product, context=context)
            rfp = llm([HumanMessage(content=prompt)])

        st.subheader("ðŸ“„ Generated RFP")
        st.text(rfp.content)
